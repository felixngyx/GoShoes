services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:9000"
    volumes:
      - ./backend:/var/www/html
      - ./backend/storage:/var/www/html/storage
      - ./backend/bootstrap/cache:/var/www/html/bootstrap/cache
    networks:
      - laravel-network
    depends_on:
      - mysql
    environment:
      - DB_HOST=mysql

  ngrok:
    image: ngrok/ngrok:alpine
    environment:
      NGROK_AUTHTOKEN: '2kxXXacpwvMVRJJO5Q8Voa0fNq0_4WCFKCCUVTzNfBXxSEGWL'
    command: 'http frontend:4567'
    networks:
      - laravel-network
    ports:
      - '4040:4040'
    expose:
      - '4040'
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: pop-18.3
      MYSQL_USER: app
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel-network

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www/html
    networks:
      - laravel-network
    depends_on:
      - app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4567:4567"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - laravel-network
    depends_on:
      - app

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: 12345
    networks:
      - laravel-network

networks:
  laravel-network:
    driver: bridge

volumes:
  mysql_data:
